{"version":3,"sources":["firebase.js","constants/listCategoryIcons.js","actions/index.js","components/App/ListItem.jsx","components/App/Lists.jsx","components/App/App.jsx","components/Auth/SignIn.jsx","components/Auth/SignUp.jsx","components/Add/ListInstructions.jsx","components/Add/ListInputGroup.jsx","components/Add/AddList.jsx","components/Redirect/RedirectPage.jsx","reducers/ReducerUser.js","reducers/index.js","reducers/ReducerLists.js","components/ListPage/ListLink.jsx","components/ListPage/ListContent.jsx","components/ListPage/ListPage.jsx","index.js","images/logo.jpg"],"names":["firebaseApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","listsRef","ref","newListsRef","SIGNED_IN","SET_LISTS","iconList","name","description","selected","setLists","lists","type","ListItem","_this$props$list","this","props","list","title","icon","react_default","a","createElement","rel","className","href","map","eachIcon","index","index_es","size","key","Component","connect","state","user","Lists","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","shownLists","newListsToBePushed","filteredLists","noMatchingLists","forEach","push","_this2","on","data","_list$val","val","serverKey","setState","forceUpdate","newLists","_list$val2","listItems","_this3","filterEntered","searchTerm","length","hasBeenReset","filterIcon","indexOf","term","toLowerCase","components_App_ListItem","App","icons","showIcons","auth","signOut","browserHistory","document","getElementById","blur","refs","iconsList","scrollIntoView","value","values","hasIconBeenSelected","valueId","item","style","margin","src","logo","alt","disabled","onClick","filterLists","id","onChange","event","target","enterSearchTerm","addIcon","resetSearchParameters","components_App_Lists","SignIn","email","password","error","_this$state","signInWithEmailAndPassword","catch","placeholder","signIn","message","es","to","SignUp","createUserAndRetrieveDataWithEmailAndPassword","signUp","ListInstructions","instructions","instruction","text","ListInputGroup","selectedIcons","itemDescriptions","links","ableToInput","displayInputError","inputError","newListItems","diableButtons","newListItemArray","i","itemValues","itemDesc","link","newListObject","isNewListIsValid","pop","input","disableButtons","includes","filter","isNewListValid","components_Add_ListInstructions","addListItem","removeListItem","handleNewListItem","addList","AddList","Add_ListInputGroup","RedirectPage","console","log","combineReducers","arguments","undefined","action","ListLink","linkItems","ListContent","ListPage_ListLink","ListPage","paramName","params","components_ListPage_ListContent","library","add","faMusic","faBook","faUmbrellaBeach","faTshirt","faUtensils","faLaptop","faSuitcase","faCapsules","faSmile","faPen","faThumbsUp","faMoneyBill","faInfinity","store","createStore","reducer","ReactDOM","render","react_redux_es","path","history","component","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4fedc431.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\n\nconst config = {\n    apiKey: \"AIzaSyDl8MVwNVMIgOvOa37GxEqpsANzTaj9Zvo\",\n    authDomain: \"specialist-1f389.firebaseapp.com\",\n    databaseURL: \"https://specialist-1f389.firebaseio.com\",\n    projectId: \"specialist-1f389\",\n    storageBucket: \"specialist-1f389.appspot.com\",\n    messagingSenderId: \"8944858131\"\n};\n\nexport const firebaseApp = firebase.initializeApp(config);\nexport const listsRef = firebase.database().ref(\"lists\");\nexport const newListsRef = firebase.database().ref(\"newLists\");\n","export const SIGNED_IN = \"SIGNED_IN\";\nexport const SET_LISTS = \"SET_LISTS\";\n\nexport const iconList = [\n    { name: \"music\", description: \"Music\", selected: false },\n    { name: \"book\", description: \"Books\", selected: false },\n    { name: \"tshirt\", description: \"Clothing\", selected: false },\n    { name: \"utensils\", description: \"Food\", selected: false },\n    { name: \"laptop\", description: \"Electronics\", selected: false },\n    { name: \"suitcase\", description: \"Travel\", selected: false },\n    { name: \"capsules\", description: \"Nutrition\", selected: false },\n    { name: \"umbrella-beach\", description: \"Outdoors\", selected: false },\n    { name: \"infinity\", description: \"Misc.\", selected: false }\n];\n","import { SIGNED_IN, SET_LISTS } from \"../constants/listCategoryIcons\";\n\nexport function logUser(email) {\n    const action = {\n        type: SIGNED_IN,\n        email\n    };\n    return action;\n}\n\nexport function setLists(lists) {\n    const action = {\n        type: SET_LISTS,\n        lists\n    };\n    return action;\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./ListItem.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass ListItem extends Component {\n    render() {\n        const { name, title, description, icon } = this.props.list;\n        return (\n            <div>\n                <a\n                    rel=\"noopener noreferrer\"\n                    className=\"card-link\"\n                    href={this.props.list.title}\n                >\n                    <div className=\"list-item-outer-card\">\n                        <div className=\"list-item-card\">\n                            <h1 className=\"list-header\">{title}</h1>\n                            <h2 className=\"list-description\">\n                                Submitted by {name}\n                            </h2>\n                            <h2 className=\"list-description\">{description}</h2>\n                        </div>\n                        {icon.map((eachIcon, index) => {\n                            return (\n                                <FontAwesomeIcon\n                                    icon={eachIcon}\n                                    size=\"6x\"\n                                    key={index}\n                                />\n                            );\n                        })}\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user } = state;\n    return { user };\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(ListItem);\n","import React, { Component } from \"react\";\nimport { listsRef } from \"../../firebase\";\nimport { newListsRef } from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setLists } from \"../../actions\";\nimport ListItem from \"./ListItem\";\nimport \"./Lists.css\";\nimport \"../Global.css\";\n\nclass Lists extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            shownLists: [],\n            newListsToBePushed: []\n        };\n        this.filteredLists = [];\n        this.noMatchingLists = false;\n    }\n\n    pushNewItems() {\n        this.state.newListsToBePushed.forEach(list => {\n            listsRef.push(list);\n        });\n    }\n\n    componentDidMount() {\n        listsRef.on(\"value\", data => {\n            let lists = [];\n            data.forEach(list => {\n                const { name, title, description, icon } = list.val();\n                const serverKey = list.key;\n                lists.push({ name, title, description, icon, serverKey });\n            });\n            this.props.setLists(lists);\n            this.setState({ shownLists: lists });\n            this.forceUpdate();\n        });\n\n        // TODO: Repeat Logic - should put this into a service\n        newListsRef.on(\"value\", data => {\n            let newLists = [];\n            data.forEach(list => {\n                const {\n                    name,\n                    title,\n                    description,\n                    icon,\n                    listItems\n                } = list.val();\n                const serverKey = list.key;\n                newLists.push({\n                    name,\n                    title,\n                    description,\n                    icon,\n                    serverKey,\n                    listItems\n                });\n            });\n            this.setState({ newListsToBePushed: newLists });\n            this.forceUpdate();\n        });\n    }\n\n    componentDidUpdate() {\n        if (\n            // Icon is selected\n            this.props.filterEntered &&\n            this.props.searchTerm === \"\" &&\n            this.filteredLists.length === 0 &&\n            !this.props.hasBeenReset\n        ) {\n            if (this.props.filterIcon.length > 0) {\n                this.props.lists.forEach(list => {\n                    if (list.icon.indexOf(this.props.filterIcon) > -1) {\n                        this.filteredLists.push(list);\n                    }\n                });\n            }\n            this.setState({ shownLists: this.filteredLists });\n        } else if (\n            // search term is entered\n            this.props.filterEntered &&\n            this.props.filterIcon.length === 0 &&\n            this.props.searchTerm !== \"\" &&\n            this.filteredLists.length === 0 &&\n            !this.props.hasBeenReset\n        ) {\n            let term = this.props.searchTerm.toLowerCase();\n\n            this.props.lists.forEach(list => {\n                let lowerCaseListName = list.title.toLowerCase();\n                if (lowerCaseListName.indexOf(term) > -1) {\n                    this.filteredLists.push(list);\n                }\n            });\n\n            if (\n                this.filteredLists.length &&\n                this.filteredLists !== this.state.shownLists\n            ) {\n                this.noMatchingLists = false;\n                this.setState({ shownLists: this.filteredLists });\n            } else {\n                if (!this.noMatchingLists) {\n                    this.forceUpdate();\n                }\n                this.noMatchingLists = true;\n            }\n        } else if (\n            // reset is selected\n            !this.props.filterEntered &&\n            this.props.filterIcon === \"\" &&\n            this.props.searchTerm === \"\" &&\n            this.props.hasBeenReset\n        ) {\n            this.filteredLists = [];\n            if (\n                this.state.shownLists !== this.props.lists &&\n                !this.noMatchingLists\n            ) {\n                this.setState({ shownLists: this.props.lists });\n            } else if (this.noMatchingLists) {\n                // If reseting after no matches\n                this.noMatchingLists = false;\n                this.forceUpdate();\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"list-group\">\n                {this.noMatchingLists ? (\n                    <h1 className=\"list-option-title\">\n                        Sorry, no lists matched your search term. Please try\n                        again.\n                    </h1>\n                ) : (\n                    this.state.shownLists.map((list, index) => {\n                        return (\n                            <ListItem key={index} list={list}>\n                                {list.title}\n                            </ListItem>\n                        );\n                    })\n                )}\n                {/* <button\n                    className=\"icon-button\"\n                    onClick={() => this.pushNewItems()}\n                >\n                    Push New List Items\n                </button> */}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { lists } = state;\n    return { lists };\n}\n\nexport default connect(\n    mapStateToProps,\n    { setLists }\n)(Lists);\n","import React, { Component } from \"react\";\nimport { firebaseApp } from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport Lists from \"./Lists.jsx\";\nimport \"./App.css\";\nimport \"../Global.css\";\nimport { browserHistory } from \"react-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { iconList } from \"../../constants/listCategoryIcons\";\nimport logo from \"../../images/logo.jpg\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterIcon: \"\",\n            filterEntered: false,\n            searchTerm: \"\",\n            hasBeenReset: false\n        };\n        this.icons = iconList;\n        this.showIcons = false;\n    }\n\n    signOut() {\n        firebaseApp.auth().signOut();\n        browserHistory.push(\"/signin\");\n    }\n\n    filterLists() {\n        this.showIcons = this.showIcons ? false : true;\n        this.forceUpdate();\n        if (document.getElementById(\"filter-button\")) {\n            document.getElementById(\"filter-button\").blur();\n        }\n        this.refs.iconsList.scrollIntoView();\n    }\n\n    addIcon(icon) {\n        let value = Object.values(icon)[0].name;\n        let hasIconBeenSelected = !Object.values(icon)[0].selected;\n        let valueId = value + \"-filter-button\";\n\n        this.showIcons = false;\n\n        this.setState({\n            filterIcon: value,\n            filterEntered: hasIconBeenSelected,\n            hasBeenReset: false\n        });\n\n        this.icons.forEach(item => (item.selected = false));\n        this.icons.forEach(item => {\n            if (item.name === value) {\n                item.selected = hasIconBeenSelected;\n            }\n        });\n\n        if (document.getElementById(valueId)) {\n            document.getElementById(valueId).blur();\n        }\n        this.forceUpdate();\n    }\n\n    enterSearchTerm() {\n        this.setState({ filterEntered: true, hasBeenReset: false });\n        document.getElementById(\"search-button\").blur();\n        this.showIcons = false;\n        this.forceUpdate();\n    }\n\n    resetSearchParameters() {\n        this.setState({\n            filterIcon: \"\",\n            filterEntered: false,\n            searchTerm: \"\",\n            hasBeenReset: true\n        });\n        this.icons.forEach(item => (item.selected = false));\n        document.getElementById(\"reset-search-button\").blur();\n        this.forceUpdate();\n        this.refs.iconsList.scrollIntoView();\n    }\n\n    render() {\n        return (\n            <div style={{ margin: \"5px\" }}>\n                <div className=\"logo-flex\">\n                    <img className=\"logo\" src={logo} alt=\"blue links\" />\n                </div>\n                <div className=\"landing-container\">\n                    <h1 className=\"landing-title\">\n                        Share links to your favorite things. <br />\n                        Get paid doing it.\n                    </h1>\n                </div>\n                <div className=\"list-option-headers\">\n                    <div className=\"list-expansion\">\n                        <h1 className=\"list-option-title\">\n                            Make Money Sharing The Things You Love\n                        </h1>\n                        <a href=\"/addlist\">\n                            <button className=\"primary-button app-section-header list-option-title\">\n                                Create a List\n                            </button>\n                        </a>\n                    </div>\n                    <div className=\"list-expansion\">\n                        <h1 className=\"list-option-title\">\n                            Learn What the Experts Use\n                        </h1>\n                        <button\n                            disabled={this.state.filterEntered}\n                            className=\"primary-button app-section-header list-option-title\"\n                            onClick={() => this.filterLists()}\n                            id=\"filter-button\"\n                        >\n                            Find a List\n                        </button>\n                    </div>\n                </div>\n                <div ref=\"iconsList\">&nbsp;</div>\n                {this.showIcons ? (\n                    <div className=\"icon-group\">\n                        <div className=\"search-container\">\n                            <h4 className=\"search-title\">Search:</h4>\n                            <input\n                                className=\"search-input\"\n                                type=\"text\"\n                                onChange={event =>\n                                    this.setState({\n                                        searchTerm: event.target.value\n                                    })\n                                }\n                            />\n                            <button\n                                className=\"primary-button\"\n                                id=\"search-button\"\n                                onClick={() => this.enterSearchTerm()}\n                            >\n                                Search\n                            </button>\n                        </div>\n                        <h4 className=\"list-option-title\">\n                            Select a Category:\n                        </h4>\n                        {this.icons.map((icon, index) => {\n                            return (\n                                <div\n                                    key={index}\n                                    className=\"icon-and-description\"\n                                >\n                                    <h4>{icon.description}</h4>\n                                    <button\n                                        className={\n                                            \"icon-button \" +\n                                            (icon.selected\n                                                ? \"selected-icon\"\n                                                : \"\")\n                                        }\n                                        onClick={() => this.addIcon({ icon })}\n                                        key={index}\n                                        id={icon.name + \"-filter-button\"}\n                                    >\n                                        <FontAwesomeIcon\n                                            size=\"3x\"\n                                            icon={icon.name}\n                                        />\n                                    </button>\n                                </div>\n                            );\n                        })}\n                    </div>\n                ) : (\n                    <div />\n                )}\n                {this.state.filterEntered ? (\n                    <div className=\"reset-search-flex\">\n                        <button\n                            className=\"primary-button reset-search\"\n                            onClick={() => this.resetSearchParameters()}\n                            id=\"reset-search-button\"\n                        >\n                            Reset Search\n                        </button>\n                    </div>\n                ) : (\n                    <div />\n                )}\n                <Lists\n                    filterIcon={this.state.filterIcon}\n                    filterEntered={this.state.filterEntered}\n                    searchTerm={this.state.searchTerm}\n                    hasBeenReset={this.state.hasBeenReset}\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user } = state;\n    return { user };\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(App);\n","import React, { Component } from \"react\";\nimport { browserHistory, Link } from \"react-router\";\nimport { firebaseApp } from \"../../firebase\";\nimport \"./Auth.css\";\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: \"\"\n        };\n    }\n\n    signIn() {\n        const { email, password } = this.state;\n        firebaseApp\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch(error => {\n                this.setState({ error });\n            });\n        browserHistory.push(\"/\");\n    }\n\n    render() {\n        return (\n            <div className=\"page-background\">\n                <div className=\"auth-background\">\n                    <h1 className=\"title\">Special List</h1>\n                    <h2 className=\"sub-title\">\n                        <i>Get The Stuff the Pros Use</i>\n                    </h2>\n                    <div>\n                        <input\n                            className=\"auth-input\"\n                            type=\"text\"\n                            placeholder=\"email\"\n                            onChange={event =>\n                                this.setState({ email: event.target.value })\n                            }\n                        />\n                        <input\n                            className=\"auth-input\"\n                            type=\"password\"\n                            placeholder=\"password\"\n                            onChange={event =>\n                                this.setState({ password: event.target.value })\n                            }\n                        />\n                    </div>\n                    <div className=\"button-group\">\n                        <button\n                            className=\"btn btn-primary\"\n                            type=\"button\"\n                            onClick={() => this.signIn()}\n                        >\n                            Sign In\n                        </button>\n                        <div className=\"auth-error\">\n                            {this.state.error.message}\n                        </div>\n                        <div className=\"auth-link\">\n                            <Link to={\"/signup\"}>Sign Up</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SignIn;\n","import React, { Component } from \"react\";\nimport { browserHistory, Link } from \"react-router\";\nimport { firebaseApp } from \"../../firebase\";\nimport \"./Auth.css\";\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: \"\"\n        };\n    }\n\n    signUp() {\n        const { email, password } = this.state;\n        firebaseApp\n            .auth()\n            .createUserAndRetrieveDataWithEmailAndPassword(email, password)\n            .catch(error => {\n                this.setState({ error });\n            });\n        browserHistory.push(\"/\");\n    }\n\n    render() {\n        return (\n            <div className=\"page-background\">\n                <div className=\"auth-background\">\n                    <h1 className=\"title\">Special List</h1>\n                    <h2 className=\"sub-title\">\n                        <i>Get The Stuff the Pros Use</i>\n                    </h2>\n                    <div>\n                        <input\n                            className=\"auth-input\"\n                            type=\"text\"\n                            placeholder=\"email\"\n                            onChange={event =>\n                                this.setState({ email: event.target.value })\n                            }\n                        />\n                        <input\n                            className=\"auth-input\"\n                            type=\"password\"\n                            placeholder=\"password\"\n                            onChange={event =>\n                                this.setState({ password: event.target.value })\n                            }\n                        />\n                    </div>\n                    <div className=\"button-group\">\n                        <button\n                            className=\"btn btn-primary\"\n                            type=\"button\"\n                            onClick={() => this.signUp()}\n                        >\n                            Sign Up\n                        </button>\n                        <div className=\"auth-error\">\n                            {this.state.error.message}\n                        </div>\n                        <div>\n                            <Link to={\"/signin\"}>\n                                Already a user? Sign in instead.\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SignUp;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../Global.css\";\nimport \"./ListInstructions.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass ListInstructions extends Component {\n    constructor() {\n        super();\n        this.instructions = [\n            {\n                instruction: \"Enter your contact information\",\n                icon: \"smile\"\n            },\n            {\n                instruction:\n                    \"Create a list of links to your favorite things - on Amazon if possible\",\n                icon: \"pen\"\n            },\n            {\n                instruction:\n                    \"We review your list, and if it meets our guidelines, we put it on Blue Links\",\n                icon: \"thumbs-up\"\n            },\n            {\n                instruction:\n                    \"When people like the items on your list and buy them - if they are Amazon links - you get money for your recommendation! When your sale is processed, a small portion of that sale will be sent to bluelinks, and we will send you 80% of that money through a payment method of your choice.\",\n                icon: \"money-bill\"\n            }\n        ];\n    }\n    render() {\n        return (\n            <div className=\"list-instructions-outer\">\n                <h1 className=\"list-instruction-header\">\n                    How to Use Blue Links:\n                </h1>\n                {this.instructions.map((text, index) => {\n                    return (\n                        <div className=\"instructions-group\" key={index}>\n                            <FontAwesomeIcon icon={text.icon} size=\"2x\" />\n                            <h4 className=\"list-instruction\">\n                                {text.instruction}\n                            </h4>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user } = state;\n    return { user };\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(ListInstructions);\n","import React, { Component } from \"react\";\nimport { newListsRef } from \"../../firebase\";\n// import { listsRef } from \"../../firebase\"; 'feature flag' for new lists to seperate db table\nimport { connect } from \"react-redux\";\nimport \"../Global.css\";\nimport \"./AddList.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { iconList } from \"../../constants/listCategoryIcons\";\nimport ListInstructions from \"./ListInstructions\";\n\n// TODO split this into multiple components, it's the largest component by far\nclass ListInputGroup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            email: \"\",\n            title: \"\",\n            description: \"\"\n        };\n        this.selectedIcons = [];\n        this.itemDescriptions = [\"\"];\n        this.links = [\"\"];\n        this.ableToInput = true;\n        this.displayInputError = false;\n        this.inputError = \"\";\n        this.newListItems = [];\n        this.icons = iconList;\n        this.diableButtons = false;\n    }\n\n    addList() {\n        let newListItemArray = [];\n        for (let i = 0; i < this.itemDescriptions.length; i++) {\n            let itemValues = {\n                itemDesc: this.itemDescriptions[i],\n                link: this.links[i]\n            };\n            newListItemArray.push(itemValues);\n        }\n        const newListObject = {\n            name: this.state.name,\n            email: this.state.email,\n            title: this.state.title,\n            description: this.state.description,\n            icon: this.selectedIcons,\n            listItems: newListItemArray\n        };\n\n        if (this.isNewListIsValid(newListObject)) {\n            newListsRef.push(newListObject);\n            // listsRef.push(newListObject);\n            this.ableToInput = false;\n            this.forceUpdate();\n        } else {\n            this.displayInputError = true;\n            this.inputError =\n                \"Please complete all fields on the form to continue\";\n            this.forceUpdate();\n        }\n    }\n\n    addListItem() {\n        this.itemDescriptions.push(\"item\");\n        this.forceUpdate();\n        if (document.getElementById(\"add-list-input-group-button\")) {\n            document.getElementById(\"add-list-input-group-button\").blur();\n        }\n    }\n\n    removeListItem() {\n        if (this.itemDescriptions.length > 0) {\n            this.itemDescriptions.pop();\n            this.forceUpdate();\n            if (document.getElementById(\"add-list-input-group-button\")) {\n                document.getElementById(\"add-list-input-group-button\").blur();\n            }\n        }\n    }\n\n    handleNewListItem(input, index, type) {\n        if (type === \"description\") {\n            this.itemDescriptions[index] = input;\n        } else if (type === \"link\") {\n            this.links[index] = input;\n        }\n    }\n\n    addIcon(icon) {\n        let value = Object.values(icon)[0].name;\n        let valueId = value + \"-input-button\";\n\n        this.disableButtons = this.disableButtons === true ? false : true;\n\n        if (this.selectedIcons.includes(value)) {\n            this.selectedIcons = this.selectedIcons.filter(item => {\n                return item !== value;\n            });\n        } else {\n            this.selectedIcons.push(value);\n        }\n\n        this.icons.forEach(item => {\n            if (item.name === value) {\n                item.selected = item.selected === true ? false : true;\n            }\n        });\n        this.forceUpdate();\n        if (document.getElementById(valueId)) {\n            document.getElementById(valueId).blur();\n        }\n    }\n\n    isNewListIsValid(list) {\n        let newListItems = Object.values(list);\n        let isNewListValid = true;\n\n        newListItems.forEach(item => {\n            if (typeof item === \"string\") {\n                if (item === \"\") {\n                    isNewListValid = false;\n                }\n            } else {\n                if (item.length === 0) {\n                    isNewListValid = false;\n                }\n            }\n        });\n\n        return isNewListValid;\n    }\n\n    render() {\n        if (this.ableToInput) {\n            return (\n                <div className=\"list-input\">\n                    <ListInstructions />\n                    <div className=\"list-category\">\n                        <h4 className=\"list-input-title\">Your Name: </h4>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Your Name\"\n                            className=\"list-input-field\"\n                            onChange={event =>\n                                this.setState({ name: event.target.value })\n                            }\n                        />\n                    </div>\n                    <div className=\"list-category\">\n                        <h4 className=\"list-input-title\">Your Email: </h4>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Your Email\"\n                            className=\"list-input-field\"\n                            onChange={event =>\n                                this.setState({ email: event.target.value })\n                            }\n                        />\n                    </div>\n                    <div className=\"list-category\">\n                        <h4 className=\"list-input-title\">\n                            The Title of Your List:{\" \"}\n                        </h4>\n                        <input\n                            type=\"text\"\n                            placeholder=\"List Title\"\n                            className=\"list-input-field\"\n                            onChange={event =>\n                                this.setState({ title: event.target.value })\n                            }\n                        />\n                    </div>\n                    <div className=\"list-category\">\n                        <h4 className=\"list-input-title\">\n                            {\" \"}\n                            Your List's Description:{\" \"}\n                        </h4>\n                        <textarea\n                            type=\"text\"\n                            placeholder=\"Item description\"\n                            className=\"list-input-description\"\n                            onChange={event =>\n                                this.setState({\n                                    description: event.target.value\n                                })\n                            }\n                        />\n                    </div>\n                    <div className=\"list-category-final\">\n                        <h4 className=\"list-input-title\">\n                            Select One Product Group:\n                        </h4>\n                        <div className=\"icon-group\">\n                            {this.icons.map((icon, index) => {\n                                return (\n                                    <div\n                                        key={index}\n                                        className=\"icon-and-description\"\n                                    >\n                                        <h4>{icon.description}</h4>\n                                        <button\n                                            className={\n                                                \"icon-button \" +\n                                                (icon.selected\n                                                    ? \"selected-icon\"\n                                                    : \"\")\n                                            }\n                                            onClick={() =>\n                                                this.addIcon({ icon })\n                                            }\n                                            key={index}\n                                            id={icon.name + \"-input-button\"}\n                                            disabled={\n                                                this.disableButtons &&\n                                                !icon.selected\n                                            }\n                                        >\n                                            <FontAwesomeIcon\n                                                size=\"3x\"\n                                                icon={icon.name}\n                                            />\n                                        </button>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"list-category-group\">\n                        <h4 className=\"list-input-title\">\n                            Edit List:\n                            <button\n                                className=\"primary-button add-list-button\"\n                                id=\"add-list-input-group-button\"\n                                onClick={() => this.addListItem()}\n                            >\n                                &#43;\n                            </button>\n                            <button\n                                className=\"primary-button add-list-button\"\n                                id=\"add-list-input-group-button\"\n                                onClick={() => this.removeListItem()}\n                            >\n                                -\n                            </button>\n                        </h4>\n\n                        <div className=\"each-list-group\">\n                            {this.itemDescriptions.map((item, index) => (\n                                <div key={index}>\n                                    <h4 className=\"item-number\">{index + 1}</h4>\n                                    <div className=\"list-item-input-group\">\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Enter an Item Description Here\"\n                                            className=\"list-item-desc-or-link\"\n                                            onChange={event =>\n                                                this.handleNewListItem(\n                                                    event.target.value,\n                                                    index,\n                                                    \"description\"\n                                                )\n                                            }\n                                        />\n                                        <input\n                                            type=\"text\"\n                                            placeholder=\"Enter an Item Link Here\"\n                                            className=\"list-item-desc-or-link\"\n                                            onChange={event =>\n                                                this.handleNewListItem(\n                                                    event.target.value,\n                                                    index,\n                                                    \"link\"\n                                                )\n                                            }\n                                        />\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                    {this.displayInputError ? (\n                        <h4 className=\"spcl-warning\">{this.inputError}</h4>\n                    ) : (\n                        <br />\n                    )}\n                    <button\n                        className=\"primary-button\"\n                        type=\"button\"\n                        onClick={() => this.addList()}\n                    >\n                        Submit\n                    </button>\n                    <div className=\"list-category-final\" />\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <h1 className=\"after-submit\">\n                        Thank you! Your list will be reviewed as soon as\n                        possible, and we will reach out to you through email\n                        shortly. <a href=\"/\">Click here</a> to Return to the\n                        homepage.\n                    </h1>\n                </div>\n            );\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user } = state;\n    return { user };\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(ListInputGroup);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListInputGroup from \"./ListInputGroup\";\nimport logo from \"../../images/logo.jpg\";\nimport \"../Global.css\";\nimport \"./AddList.css\";\n\nclass AddList extends Component {\n    render() {\n        return (\n            <div>\n                <a href=\"/\">\n                    <div className=\"logo-flex\">\n                        <img className=\"logo\" src={logo} alt=\"blue links\" />\n                    </div>\n                </a>\n                <ListInputGroup />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user } = state;\n    return { user };\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(AddList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../Global.css\";\n\nclass RedirectPage extends Component {\n    render() {\n        console.log(\"getting here\");\n\n        return <h1>Getting Here</h1>;\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user } = state;\n    return { user };\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(RedirectPage);\n","import { SIGNED_IN } from \"../constants/listCategoryIcons\";\n\nlet user = {\n    email: null\n};\n\nexport default (state = user, action) => {\n    switch (action.type) {\n        case SIGNED_IN:\n            const { email } = action;\n            user = {\n                email\n            };\n            return user;\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from \"redux\";\nimport user from \"./ReducerUser\";\nimport lists from \"./ReducerLists\";\n\nexport default combineReducers({\n    user,\n    lists\n});\n","import { SET_LISTS } from \"../constants/listCategoryIcons\";\n\nexport default (state = [], action) => {\n    switch (action.type) {\n        case SET_LISTS:\n            const { lists } = action;\n            return lists;\n        default:\n            return state;\n    }\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../Global.css\";\nimport \"./ListContent.css\";\n\nclass ListLink extends Component {\n    render() {\n        let linkItems = Object.values(this.props.listItems);\n        return (\n            <ul className=\"content-links-list\">\n                {linkItems.map((item, index) => {\n                    return (\n                        <li className=\"content-link\" key={index}>\n                            <span>\n                                <b>{item.itemDesc}: </b>\n                            </span>\n                            <br />\n                            <a href=\"/redirectpage\">{item.link}</a>\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user } = state;\n    return { user };\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(ListLink);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListLink from \"./ListLink\";\nimport \"./ListContent.css\";\nimport \"../Global.css\";\n\nclass ListContent extends Component {\n    render() {\n        const { name, title, description, listItems } = this.props.list;\n        return (\n            <div className=\"content-outer-container\">\n                <div className=\"content-overview\">\n                    <h1 className=\"content-descript-title\">{title}</h1>\n                    <h2 className=\"content-descript-profile\">\n                        <i>Submitted By: {name}</i>\n                    </h2>\n                    <h2 className=\"content-sub-description\">{description}</h2>\n                    <ListLink listItems={listItems} />\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { user } = state;\n    return { user };\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(ListContent);\n","import React, { Component } from \"react\";\nimport { listsRef } from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setLists } from \"../../actions\";\nimport ListContent from \"./ListContent\";\nimport \"../Global.css\";\nimport \"./ListPage.css\";\nimport logo from \"../../images/logo.jpg\";\n\nclass ListPage extends Component {\n    componentDidMount() {\n        const paramName = this.props.params.id;\n        listsRef.on(\"value\", data => {\n            let lists = [];\n            data.forEach(list => {\n                const { name, title, description, listItems } = list.val();\n                const serverKey = list.key;\n                if (title === paramName) {\n                    lists.push({\n                        name,\n                        title,\n                        description,\n                        listItems,\n                        serverKey\n                    });\n                }\n            });\n            this.props.setLists(lists);\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <a href=\"/\">\n                    <div className=\"logo-flex\">\n                        <img className=\"logo\" src={logo} alt=\"blue links\" />\n                    </div>\n                </a>\n                <div className=\"content-container\">\n                    {this.props.lists.map((list, index) => {\n                        return <ListContent key={index} list={list} />;\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { lists } = state;\n    return { lists };\n}\n\nexport default connect(\n    mapStateToProps,\n    { setLists }\n)(ListPage);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router, Route, browserHistory } from \"react-router\";\n// import { firebaseApp } from \"./firebase\";\nimport App from \"./components/App/App\";\nimport SignIn from \"./components/Auth/SignIn\";\nimport SignUp from \"./components/Auth/SignUp\";\nimport AddList from \"./components/Add/AddList\";\nimport RedirectPage from \"./components/Redirect/RedirectPage\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducers\";\n// import { logUser } from './actions';\nimport ListPage from \"./components/ListPage/ListPage\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n    faMusic,\n    faBook,\n    faUmbrellaBeach,\n    faTshirt,\n    faUtensils,\n    faLaptop,\n    faSuitcase,\n    faCapsules,\n    faSmile,\n    faPen,\n    faThumbsUp,\n    faMoneyBill,\n    faInfinity\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n    faMusic,\n    faBook,\n    faUmbrellaBeach,\n    faTshirt,\n    faUtensils,\n    faLaptop,\n    faSuitcase,\n    faCapsules,\n    faSmile,\n    faPen,\n    faThumbsUp,\n    faMoneyBill,\n    faInfinity\n);\n\nconst store = createStore(reducer);\n\n// Removing logic for sign in for now\n// firebaseApp.auth().onAuthStateChanged(user => {\n//   if (user) {\n//     const { email } = user;\n//     store.dispatch(logUser(email));\n//   }\n// });\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router path=\"/\" history={browserHistory}>\n            <Route path=\"/\" component={App} />\n            <Route path=\"/redirectpage\" component={RedirectPage} />\n            <Route path=\"/addlist\" component={AddList} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/:id\" component={ListPage} />\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.a9e64254.jpg\";"],"sourceRoot":""}